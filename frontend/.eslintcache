[{"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\index.js":"1","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\store.js":"2","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\App.js":"4","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reducers\\userReducers.js":"5","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reducers\\productReducers.js":"6","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reducers\\cartReducer.js":"7","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Footer.js":"8","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\HomeScreen.js":"9","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\LoginScreen.js":"11","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\CartScreen.js":"12","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\ProfileScreen.js":"13","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\RegisterScreen.js":"14","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Header.js":"15","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\constants\\userConstants.js":"16","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Message.js":"17","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Loader.js":"18","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Product.js":"19","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\FormContainer.js":"20","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Rating.js":"21","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\constants\\productConstants.js":"22","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\constants\\cartConstants.js":"23","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\actions\\productActions.js":"24","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\actions\\userActions.js":"25","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\actions\\cartActions.js":"26","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\ShippingScreen.js":"27","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\CheckoutSteps.js":"28","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\PaymentScreen.js":"29","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reducers\\orderReducers.js":"31","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\constants\\orderConstants.js":"33","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\OrderScreen.js":"34"},{"size":587,"mtime":1610674091989,"results":"35","hashOfConfig":"36"},{"size":2000,"mtime":1613544531945,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":1694,"mtime":1613444230982,"results":"39","hashOfConfig":"36"},{"size":2130,"mtime":1611628313664,"results":"40","hashOfConfig":"36"},{"size":1209,"mtime":1610676961339,"results":"41","hashOfConfig":"36"},{"size":1244,"mtime":1612796503207,"results":"42","hashOfConfig":"36"},{"size":326,"mtime":1610336556277,"results":"43","hashOfConfig":"36"},{"size":1260,"mtime":1610676599111,"results":"44","hashOfConfig":"36"},{"size":4022,"mtime":1610852568504,"results":"45","hashOfConfig":"36"},{"size":2235,"mtime":1611259462850,"results":"46","hashOfConfig":"36"},{"size":4169,"mtime":1610858317173,"results":"47","hashOfConfig":"36"},{"size":3738,"mtime":1613544679136,"results":"48","hashOfConfig":"36"},{"size":3243,"mtime":1611261504640,"results":"49","hashOfConfig":"36"},{"size":1909,"mtime":1611252755547,"results":"50","hashOfConfig":"36"},{"size":850,"mtime":1611268799315,"results":"51","hashOfConfig":"36"},{"size":248,"mtime":1610676504513,"results":"52","hashOfConfig":"36"},{"size":405,"mtime":1610852662880,"results":"53","hashOfConfig":"36"},{"size":905,"mtime":1610341342295,"results":"54","hashOfConfig":"36"},{"size":347,"mtime":1611239952805,"results":"55","hashOfConfig":"36"},{"size":1888,"mtime":1610403836861,"results":"56","hashOfConfig":"36"},{"size":368,"mtime":1610676737575,"results":"57","hashOfConfig":"36"},{"size":238,"mtime":1612927965481,"results":"58","hashOfConfig":"36"},{"size":1497,"mtime":1610677194541,"results":"59","hashOfConfig":"36"},{"size":3575,"mtime":1611271053982,"results":"60","hashOfConfig":"36"},{"size":1255,"mtime":1612796459853,"results":"61","hashOfConfig":"36"},{"size":2707,"mtime":1612926486115,"results":"62","hashOfConfig":"36"},{"size":1294,"mtime":1612792886359,"results":"63","hashOfConfig":"36"},{"size":1892,"mtime":1612929392739,"results":"64","hashOfConfig":"36"},{"size":5219,"mtime":1613542512995,"results":"65","hashOfConfig":"36"},{"size":2273,"mtime":1613544129766,"results":"66","hashOfConfig":"36"},{"size":3773,"mtime":1613544396001,"results":"67","hashOfConfig":"36"},{"size":746,"mtime":1613543986869,"results":"68","hashOfConfig":"36"},{"size":6762,"mtime":1613535726165,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"zvmp14",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\index.js",[],["142","143"],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\store.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\App.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\ProfileScreen.js",["144","145","146"],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Header.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Message.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Product.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\constants\\productConstants.js",[],["147","148"],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\PlaceOrderScreen.js",["149"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  //  Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2)\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number(0.15 * cart.itemsPrice))\r\n  cart.totalPrice = addDecimals(\r\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\r\n  )\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/orders/${order._id}`)\r\n    }\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <b>\r\n                  Address:\r\n                  <br />\r\n                </b>\r\n                {cart.shippingAddress.address} <br />{' '}\r\n                {cart.shippingAddress.city} {cart.shippingAddress.postalCode}\r\n                <br />\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <b>Method: </b>\r\n              {cart.paymentMethod.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={4}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Submit Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\KPhantastic\\Desktop\\MERN Stack\\ECommerce\\frontend\\src\\screens\\OrderScreen.js",["150"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  // loadingPay and successPay b/c loading and success already exist\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  if (!loading) {\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  // sets clientId to axios res\r\n  // creates script element <script></script>\r\n  // plugs paypal sdk into the script async\r\n  // setsSdkReady to true\r\n  // adds the script to the body\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipped to:</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n\r\n              <p>\r\n                <p>\r\n                  <strong>Address: </strong>\r\n                </p>\r\n                <p>{order.shippingAddress.address}</p>\r\n                <p>{order.shippingAddress.city}</p>\r\n                {order.shippingAddress.postalCode}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}{' '}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <b>Method: </b>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt} </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={4}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":29,"column":20,"nodeType":"157","messageId":"158","endLine":29,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":29,"column":42,"nodeType":"157","messageId":"158","endLine":29,"endColumn":53},{"ruleId":"155","severity":1,"message":"160","line":29,"column":55,"nodeType":"157","messageId":"158","endLine":29,"endColumn":61},{"ruleId":"151","replacedBy":"161"},{"ruleId":"153","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":36,"column":6,"nodeType":"165","endLine":36,"endColumn":24,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"167","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":16},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'loadingOrders' is assigned a value but never used.","Identifier","unusedVar","'errorOrders' is assigned a value but never used.","'orders' is assigned a value but never used.",["168"],["169"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [history, order._id, success]",{"range":"173","text":"174"},[1209,1227],"[history, order._id, success]"]